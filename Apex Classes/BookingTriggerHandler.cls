public class BookingTriggerHandler {
    //Booking Payment Record Creation
    public static void createPaymentRecords(List<Booking__c> newBookings) {
        List<Booking_Payment__c> paymentsToInsert = new List<Booking_Payment__c>();

        for (Booking__c booking : newBookings) {
            Booking_Payment__c payment = new Booking_Payment__c();
            payment.Booking__c = booking.Id;
            payment.Payment_Status__c = 'Pending'; // Default status
            // Minimal fix: set required Payment_Date__c - booking record creation not working that's why
            payment.Payment_Date__c = (booking.Booking_Date__c != null)
                ? booking.Booking_Date__c
                : System.today();

            paymentsToInsert.add(payment);
        }
        if (!paymentsToInsert.isEmpty()) {

            insert paymentsToInsert;
        }
    }
    
    //BookingGuests records Creation
    public static void createBookingGuests(List<Booking__c> bookings) {
        List<BookingGuest__c> guestsToInsert = new List<BookingGuest__c>();
    
        for (Booking__c booking : bookings) {
            Integer count = (Integer)booking.Number_of_Travelers__c;
    
            for (Integer i = 1; i <= count; i++) {
                BookingGuest__c guest = new BookingGuest__c();
                guest.Booking__c = booking.Id;
                guest.Name = 'Guest ' + i; // Optional
    
                // Minimal fix for required fields - booking record creation not working that's why
                guest.Age__c = 18;
				guest.Country__c = 'Maldives';
    
                guestsToInsert.add(guest);
            }
        }
        if (!guestsToInsert.isEmpty()) {
            insert guestsToInsert;
        }
}

}